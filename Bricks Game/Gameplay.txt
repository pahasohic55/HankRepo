package Game;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;

import javax.swing.Timer;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

public class Gameplay extends JPanel implements KeyListener,ActionListener{
	private boolean play = false;
	private int score = 0;//score分數
	private int Bricks = 21; //Bricks磚塊
	private Timer timer;
	private int delay = 8; //delay延遲
	private int racketX = 310; //racket球拍
	private int ballX = 120; //預設ballX位置
	private int ballY = 350; //預設BALLY位置
	private int ballXdir = -3; //球移動
	private int ballYdir = -7; //球移動
	
	private BrickWall map; //磚塊類別
	
	public Gameplay() {
		map = new BrickWall(3, 7);//new出磚塊物件
		addKeyListener(this);//添加鍵盤監聽
		setFocusable(true);//Focus焦點設定到JFrame上
		setFocusTraversalKeysEnabled(false);
		timer = new Timer(delay,this);//new出時間物件
		timer.start();//start開始
	}
	
	//畫出物件
	public void paint(Graphics g) {//Graphics圖形
		//背景
		Image background = new ImageIcon("dir1/background.png").getImage();
		g.drawImage(background, 1, 1,692,592, null);
		
		//畫出磚塊
		map.draw((Graphics2D) g);
		
		//邊框
		g.setColor(Color.black);
		g.fillRect(0, 0, 3, 592);//fillRect填充矩形
		g.fillRect(0, 0, 692,3);
		g.fillRect(691, 0, 3, 592);
		
		//分數
		g.setColor(Color.white);
		g.setFont(new Font("serif",Font.BOLD,25));//Font字體
		g.drawString(""+score, 590, 30);
		
		//球拍
		g.setColor(Color.red);
		g.fillRect(racketX, 500,150, 15);//劃一個矩形,從racketX,500y,150x,15H
		
		
		//球ball
		g.setColor(Color.yellow);
		g.fillOval(ballX, ballY, 20, 20);
		
		if(Bricks <= 0) {
			play = false;
			ballXdir = 0;
			ballYdir = 0;
			g.setColor(Color.blue);//字體顏色
			g.setFont(new Font("serif",Font.BOLD,60));//Font字體大小
			g.drawString("You Win !!", 210, 300);//位置x,y
			
			g.setFont(new Font("serif",Font.BOLD,35));
			g.drawString("Press Enter to Restart", 190, 370);//Press Enter to Restart按Enter重新啟動

		}
		
		//如果球的位置>570失敗
		if (ballY>570) {
			play = false;
			ballXdir = 0;
			ballYdir = 0;
			g.setColor(Color.red);//字體顏色
			g.setFont(new Font("serif",Font.BOLD,60));//Font字體大小
			g.drawString("Game Over !", 200, 300);//位置x,y
			
			g.setFont(new Font("serif",Font.BOLD,35));
			g.drawString("Press Enter to Restart", 190, 370);//Press Enter to Restart按Enter重新啟動
		
			g.dispose();
		}
	}
	
	
	@Override
	public void actionPerformed(ActionEvent e) {//action動作Performed執行
		timer.start();
		if(play) {								//intersects相交 Rectangle長方形
			if(new Rectangle(ballX,ballY,20,20).intersects(new Rectangle(racketX,500,150,15))) {
				ballYdir = -ballYdir;
			}
			
			A: for(int i =0 ; i<map.map.length ; i++) {
				for(int j = 0;j<map.map[0].length;j++) {
					if(map.map[i][j] >0) {
						int brickX = j*map.brickWidth+80;
						int brickY = i*map.brickHeight+50;
						int brickWidth = map.brickWidth;
						int brickHeight = map.brickHeight;
						
					//Rectangle長方形 rect矩形
						Rectangle rect = new Rectangle(brickX,brickY,brickWidth,brickHeight);
						Rectangle ballRect = new Rectangle(ballX,ballY,20,20);
						Rectangle brickRect = rect;
						
						if(ballRect.intersects(brickRect)) {//intersect相交
							map.setBrickValue(0, i, j);
							Bricks--;
							score +=5 ;
							
							if(ballX + 19 <= brickRect.x||ballX + 1 >= brickRect.x + brickRect.width) {
								ballXdir = -ballXdir;
							}else {
								ballYdir = -ballYdir;
							}
							
							break A;
						}
					}
				}
			}
			
			ballX += ballXdir;
			ballY += ballYdir;
			if(ballX<0) {
				ballXdir = -ballXdir;
			}
			if(ballY<0) {
				ballYdir = -ballYdir;
			}
			if(ballX>670) {
				ballXdir = -ballXdir;
			}
		}
		repaint();
	}

	@Override
	public void keyTyped(KeyEvent e) {}
	@Override
	public void keyReleased(KeyEvent e) {}
	
	//鍵盤監聽事件
	@Override
	public void keyPressed(KeyEvent e) {
		if(e.getKeyCode() == KeyEvent.VK_RIGHT) {//如果keycode = 右鍵
			if(racketX >= 600) {//如果球拍>=600可向右移動
				racketX = 600;
			}else {
				moveRight();
			}
		}
		if(e.getKeyCode() == KeyEvent.VK_LEFT) {//如果keycode = 左鍵
			if(racketX <10 ) {//如果球拍<10可向左移動
				racketX=10;
			}else {
				moveLeft();
			}
		}
		if(e.getKeyCode() == KeyEvent.VK_ENTER) {//如果keycode = ENTER鍵
			if(!play) {//如果遊戲未開始,執行以下規則
				play = true;//開始遊戲
				ballX= 120;
				ballY= 350;
				ballXdir = -3;
				ballYdir = -7;
				racketX = 310;
				score = 0;
				Bricks = 21;
				map = new BrickWall(3, 7);
				
				repaint();
			}
		}
	}
	public void moveRight() {//移動到右邊
		play = true;
		racketX +=20;
	}
	public void moveLeft() {//移動到左邊
		play = true;
		racketX -=20;
	}
}
